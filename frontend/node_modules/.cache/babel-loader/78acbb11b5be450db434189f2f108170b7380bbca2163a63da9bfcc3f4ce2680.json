{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/headz-main/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Check for existing session on app load\n    const savedUser = localStorage.getItem('headz_user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setIsLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    setIsLoading(true);\n    try {\n      // Simulate API call - replace with actual backend integration\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock user data - replace with actual API response\n      const mockUser = {\n        id: 1,\n        email: email,\n        firstName: 'John',\n        lastName: 'Doe',\n        phone: '+1 (555) 123-4567',\n        preferredStylist: 'Sarah Johnson'\n      };\n      setUser(mockUser);\n      localStorage.setItem('headz_user', JSON.stringify(mockUser));\n      setIsLoading(false);\n      return true;\n    } catch (error) {\n      setIsLoading(false);\n      return false;\n    }\n  };\n  const register = async userData => {\n    setIsLoading(true);\n    try {\n      // Simulate API call - replace with actual backend integration\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock user creation - replace with actual API response\n      const newUser = {\n        id: Date.now(),\n        // Mock ID\n        email: userData.email,\n        firstName: userData.firstName,\n        lastName: userData.lastName,\n        phone: userData.phone\n      };\n      setUser(newUser);\n      localStorage.setItem('headz_user', JSON.stringify(newUser));\n      setIsLoading(false);\n      return true;\n    } catch (error) {\n      setIsLoading(false);\n      return false;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('headz_user');\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    register,\n    isLoading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isLoading","setIsLoading","savedUser","localStorage","getItem","JSON","parse","login","email","password","Promise","resolve","setTimeout","mockUser","id","firstName","lastName","phone","preferredStylist","setItem","stringify","error","register","userData","newUser","Date","now","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/apple/Downloads/headz-main/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\ninterface User {\n  id: number;\n  email: string;\n  firstName: string;\n  lastName: string;\n  phone?: string;\n  preferredStylist?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  register: (userData: RegisterData) => Promise<boolean>;\n  isLoading: boolean;\n}\n\ninterface RegisterData {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  phone?: string;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for existing session on app load\n    const savedUser = localStorage.getItem('headz_user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = async (email: string, password: string): Promise<boolean> => {\n    setIsLoading(true);\n    try {\n      // Simulate API call - replace with actual backend integration\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Mock user data - replace with actual API response\n      const mockUser: User = {\n        id: 1,\n        email: email,\n        firstName: 'John',\n        lastName: 'Doe',\n        phone: '+1 (555) 123-4567',\n        preferredStylist: 'Sarah Johnson'\n      };\n\n      setUser(mockUser);\n      localStorage.setItem('headz_user', JSON.stringify(mockUser));\n      setIsLoading(false);\n      return true;\n    } catch (error) {\n      setIsLoading(false);\n      return false;\n    }\n  };\n\n  const register = async (userData: RegisterData): Promise<boolean> => {\n    setIsLoading(true);\n    try {\n      // Simulate API call - replace with actual backend integration\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Mock user creation - replace with actual API response\n      const newUser: User = {\n        id: Date.now(), // Mock ID\n        email: userData.email,\n        firstName: userData.firstName,\n        lastName: userData.lastName,\n        phone: userData.phone\n      };\n\n      setUser(newUser);\n      localStorage.setItem('headz_user', JSON.stringify(newUser));\n      setIsLoading(false);\n      return true;\n    } catch (error) {\n      setIsLoading(false);\n      return false;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('headz_user');\n  };\n\n  const value = {\n    user,\n    login,\n    logout,\n    register,\n    isLoading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA2B9E,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACK,WAAW,CAAC;EACvC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAqD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACpD,IAAIF,SAAS,EAAE;MACbH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAC;IAChC;IACAD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAuB;IACzER,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF;MACA,MAAM,IAAIS,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;MAEvD;MACA,MAAME,QAAc,GAAG;QACrBC,EAAE,EAAE,CAAC;QACLN,KAAK,EAAEA,KAAK;QACZO,SAAS,EAAE,MAAM;QACjBC,QAAQ,EAAE,KAAK;QACfC,KAAK,EAAE,mBAAmB;QAC1BC,gBAAgB,EAAE;MACpB,CAAC;MAEDnB,OAAO,CAACc,QAAQ,CAAC;MACjBV,YAAY,CAACgB,OAAO,CAAC,YAAY,EAAEd,IAAI,CAACe,SAAS,CAACP,QAAQ,CAAC,CAAC;MAC5DZ,YAAY,CAAC,KAAK,CAAC;MACnB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdpB,YAAY,CAAC,KAAK,CAAC;MACnB,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMqB,QAAQ,GAAG,MAAOC,QAAsB,IAAuB;IACnEtB,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF;MACA,MAAM,IAAIS,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;MAEvD;MACA,MAAMa,OAAa,GAAG;QACpBV,EAAE,EAAEW,IAAI,CAACC,GAAG,CAAC,CAAC;QAAE;QAChBlB,KAAK,EAAEe,QAAQ,CAACf,KAAK;QACrBO,SAAS,EAAEQ,QAAQ,CAACR,SAAS;QAC7BC,QAAQ,EAAEO,QAAQ,CAACP,QAAQ;QAC3BC,KAAK,EAAEM,QAAQ,CAACN;MAClB,CAAC;MAEDlB,OAAO,CAACyB,OAAO,CAAC;MAChBrB,YAAY,CAACgB,OAAO,CAAC,YAAY,EAAEd,IAAI,CAACe,SAAS,CAACI,OAAO,CAAC,CAAC;MAC3DvB,YAAY,CAAC,KAAK,CAAC;MACnB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdpB,YAAY,CAAC,KAAK,CAAC;MACnB,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAM0B,MAAM,GAAGA,CAAA,KAAM;IACnB5B,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACyB,UAAU,CAAC,YAAY,CAAC;EACvC,CAAC;EAED,MAAMC,KAAK,GAAG;IACZ/B,IAAI;IACJS,KAAK;IACLoB,MAAM;IACNL,QAAQ;IACRtB;EACF,CAAC;EAED,oBACEZ,OAAA,CAACC,WAAW,CAACyC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjC,QAAA,EAChCA;EAAQ;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrC,GAAA,CAlFWF,YAAqD;AAAAwC,EAAA,GAArDxC,YAAqD;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}